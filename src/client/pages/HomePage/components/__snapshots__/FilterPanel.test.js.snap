// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterPanel should render self 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterPanel
    dateEnd="11-12-1991"
    dateStart="10-08-1991"
    limit="10"
    requestListHotels={[MockFunction]}
    searchName="searchName"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Field
          className="searchField"
          name="searchName"
          onChange={[Function]}
          required={true}
          value="searchName"
        />,
        <Field
          className="startDateField"
          min="2018-05-25"
          name="dateStart"
          onChange={[Function]}
          type="date"
          value="10-08-1991"
        />,
        <Field
          className="endDateField"
          min="2018-05-26"
          name="dateEnd"
          onChange={[Function]}
          type="date"
          value="11-12-1991"
        />,
        <Field
          max="10"
          min="1"
          name="limit"
          onChange={[Function]}
          type="number"
          value="10"
        />,
        <button
          className="searchButton"
          type="submit"
        >
          search
        </button>,
      ],
      "className": "filterPanel",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "searchField",
          "name": "searchName",
          "onChange": [Function],
          "required": true,
          "value": "searchName",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "startDateField",
          "min": "2018-05-25",
          "name": "dateStart",
          "onChange": [Function],
          "type": "date",
          "value": "10-08-1991",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "endDateField",
          "min": "2018-05-26",
          "name": "dateEnd",
          "onChange": [Function],
          "type": "date",
          "value": "11-12-1991",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "max": "10",
          "min": "1",
          "name": "limit",
          "onChange": [Function],
          "type": "number",
          "value": "10",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "search",
          "className": "searchButton",
          "type": "submit",
        },
        "ref": null,
        "rendered": "search",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            className="searchField"
            name="searchName"
            onChange={[Function]}
            required={true}
            value="searchName"
          />,
          <Field
            className="startDateField"
            min="2018-05-25"
            name="dateStart"
            onChange={[Function]}
            type="date"
            value="10-08-1991"
          />,
          <Field
            className="endDateField"
            min="2018-05-26"
            name="dateEnd"
            onChange={[Function]}
            type="date"
            value="11-12-1991"
          />,
          <Field
            max="10"
            min="1"
            name="limit"
            onChange={[Function]}
            type="number"
            value="10"
          />,
          <button
            className="searchButton"
            type="submit"
          >
            search
          </button>,
        ],
        "className": "filterPanel",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "searchField",
            "name": "searchName",
            "onChange": [Function],
            "required": true,
            "value": "searchName",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "startDateField",
            "min": "2018-05-25",
            "name": "dateStart",
            "onChange": [Function],
            "type": "date",
            "value": "10-08-1991",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "endDateField",
            "min": "2018-05-26",
            "name": "dateEnd",
            "onChange": [Function],
            "type": "date",
            "value": "11-12-1991",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "max": "10",
            "min": "1",
            "name": "limit",
            "onChange": [Function],
            "type": "number",
            "value": "10",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "search",
            "className": "searchButton",
            "type": "submit",
          },
          "ref": null,
          "rendered": "search",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
